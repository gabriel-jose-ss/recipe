{"ast":null,"code":"/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. MIT license */\n\nwindow.matchMedia || (window.matchMedia = function () {\n  \"use strict\";\n\n  // For browsers that support matchMedium api such as IE 9 and webkit\n  var styleMedia = window.styleMedia || window.media;\n\n  // For those that don't support matchMedium\n  if (!styleMedia) {\n    var style = document.createElement('style'),\n      script = document.getElementsByTagName('script')[0],\n      info = null;\n    style.type = 'text/css';\n    style.id = 'matchmediajs-test';\n    if (!script) {\n      document.head.appendChild(style);\n    } else {\n      script.parentNode.insertBefore(style, script);\n    }\n\n    // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n    info = 'getComputedStyle' in window && window.getComputedStyle(style, null) || style.currentStyle;\n    styleMedia = {\n      matchMedium: function (media) {\n        var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n        // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n        if (style.styleSheet) {\n          style.styleSheet.cssText = text;\n        } else {\n          style.textContent = text;\n        }\n\n        // Test if media query is true or false\n        return info.width === '1px';\n      }\n    };\n  }\n  return function (media) {\n    return {\n      matches: styleMedia.matchMedium(media || 'all'),\n      media: media || 'all'\n    };\n  };\n}());","map":{"version":3,"names":["window","matchMedia","styleMedia","media","style","document","createElement","script","getElementsByTagName","info","type","id","head","appendChild","parentNode","insertBefore","getComputedStyle","currentStyle","matchMedium","text","styleSheet","cssText","textContent","width","matches"],"sources":["/home/clecio/Trybe/Projetos/sd-029-b-project-recipes-app/node_modules/matchmedia-polyfill/matchMedia.js"],"sourcesContent":["/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. MIT license */\n\nwindow.matchMedia || (window.matchMedia = function() {\n    \"use strict\";\n\n    // For browsers that support matchMedium api such as IE 9 and webkit\n    var styleMedia = (window.styleMedia || window.media);\n\n    // For those that don't support matchMedium\n    if (!styleMedia) {\n        var style       = document.createElement('style'),\n            script      = document.getElementsByTagName('script')[0],\n            info        = null;\n\n        style.type  = 'text/css';\n        style.id    = 'matchmediajs-test';\n\n        if (!script) {\n          document.head.appendChild(style);\n        } else {\n          script.parentNode.insertBefore(style, script);\n        }\n\n        // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n        info = ('getComputedStyle' in window) && window.getComputedStyle(style, null) || style.currentStyle;\n\n        styleMedia = {\n            matchMedium: function(media) {\n                var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n                // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n                if (style.styleSheet) {\n                    style.styleSheet.cssText = text;\n                } else {\n                    style.textContent = text;\n                }\n\n                // Test if media query is true or false\n                return info.width === '1px';\n            }\n        };\n    }\n\n    return function(media) {\n        return {\n            matches: styleMedia.matchMedium(media || 'all'),\n            media: media || 'all'\n        };\n    };\n}());\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,UAAU,KAAKD,MAAM,CAACC,UAAU,GAAG,YAAW;EACjD,YAAY;;EAEZ;EACA,IAAIC,UAAU,GAAIF,MAAM,CAACE,UAAU,IAAIF,MAAM,CAACG,KAAM;;EAEpD;EACA,IAAI,CAACD,UAAU,EAAE;IACb,IAAIE,KAAK,GAASC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;MAC7CC,MAAM,GAAQF,QAAQ,CAACG,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;MACxDC,IAAI,GAAU,IAAI;IAEtBL,KAAK,CAACM,IAAI,GAAI,UAAU;IACxBN,KAAK,CAACO,EAAE,GAAM,mBAAmB;IAEjC,IAAI,CAACJ,MAAM,EAAE;MACXF,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,KAAK,CAAC;IAClC,CAAC,MAAM;MACLG,MAAM,CAACO,UAAU,CAACC,YAAY,CAACX,KAAK,EAAEG,MAAM,CAAC;IAC/C;;IAEA;IACAE,IAAI,GAAI,kBAAkB,IAAIT,MAAM,IAAKA,MAAM,CAACgB,gBAAgB,CAACZ,KAAK,EAAE,IAAI,CAAC,IAAIA,KAAK,CAACa,YAAY;IAEnGf,UAAU,GAAG;MACTgB,WAAW,EAAE,UAASf,KAAK,EAAE;QACzB,IAAIgB,IAAI,GAAG,SAAS,GAAGhB,KAAK,GAAG,wCAAwC;;QAEvE;QACA,IAAIC,KAAK,CAACgB,UAAU,EAAE;UAClBhB,KAAK,CAACgB,UAAU,CAACC,OAAO,GAAGF,IAAI;QACnC,CAAC,MAAM;UACHf,KAAK,CAACkB,WAAW,GAAGH,IAAI;QAC5B;;QAEA;QACA,OAAOV,IAAI,CAACc,KAAK,KAAK,KAAK;MAC/B;IACJ,CAAC;EACL;EAEA,OAAO,UAASpB,KAAK,EAAE;IACnB,OAAO;MACHqB,OAAO,EAAEtB,UAAU,CAACgB,WAAW,CAACf,KAAK,IAAI,KAAK,CAAC;MAC/CA,KAAK,EAAEA,KAAK,IAAI;IACpB,CAAC;EACL,CAAC;AACL,CAAC,EAAE,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}