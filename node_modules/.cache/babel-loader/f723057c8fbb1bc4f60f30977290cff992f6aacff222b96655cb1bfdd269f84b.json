{"ast":null,"code":"var _jsxFileName = \"/home/clecio/Trybe/Projetos/sd-029-b-project-recipes-app/src/components/CardMeals.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport AppContext from '../contexts/AppContext';\nimport { fetchSearchIngredientMeal, fetchSearchLetterMeal, fetchSearchNameMeal } from '../services/fetchMeals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst alert = 'Sorry, we haven\\'t found any recipes for these filters.';\nexport default function CardMeals() {\n  _s();\n  const {\n    search,\n    radioType,\n    meals,\n    setMeals,\n    categoryMeal,\n    initialMeals,\n    setRadioType,\n    setSearch\n  } = useContext(AppContext);\n  const history = useHistory();\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (radioType === 'ingredient') {\n          const fetchApi = await fetchSearchIngredientMeal(search);\n          setMeals(fetchApi);\n        } else if (radioType === 'name') {\n          const fetchApi = await fetchSearchNameMeal(search);\n          setMeals(fetchApi);\n        } else if (radioType === 'first-letter') {\n          if (search.length !== 1) {\n            global.alert('Your search must have only 1 (one) character');\n            setRadioType('');\n            setSearch('');\n            return;\n          }\n          const fetchApi = await fetchSearchLetterMeal(search);\n          setMeals(fetchApi);\n        }\n      } catch (error) {\n        global.alert(alert);\n      }\n    };\n    fetchData();\n    if (meals.length === 1) {\n      history.push(`/meals/${meals[0].idMeal}`);\n    }\n  }, [radioType, search, setMeals, history, meals]);\n  const handleFilter = async meal => {\n    if (filter === meal) {\n      setMeals(initialMeals);\n    } else {\n      try {\n        const NUMBER = 12;\n        const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${meal}`);\n        const data = await response.json();\n        const newData = data.meals;\n        setMeals(newData.slice(0, NUMBER));\n        setFilter(meal);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  const handleAllMeals = async () => {\n    setMeals(initialMeals);\n    setFilter([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"meals-card\",\n    children: [categoryMeal.map(list => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleFilter(list.strCategory),\n      \"data-testid\": `${list.strCategory}-category-filter`,\n      children: list.strCategory\n    }, list.strCategory, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAllMeals,\n      \"data-testid\": \"All-category-filter\",\n      type: \"button\",\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), meals ? meals.map((meal, index) => /*#__PURE__*/_jsxDEV(Link, {\n      to: meals.length > 1 && `/meals/${meal.idMeal}`,\n      className: \"card-recipe\",\n      \"data-testid\": `${index}-recipe-card`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": `${index}-card-img`,\n        src: meal.strMealThumb,\n        alt: meal.strTags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        \"data-testid\": `${index}-card-name`,\n        children: meal.strMeal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, meal.idMeal, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(CardMeals, \"mT8sFXN8R2tuJTWgD3aZJSkRVYc=\", false, function () {\n  return [useHistory];\n});\n_c = CardMeals;\nvar _c;\n$RefreshReg$(_c, \"CardMeals\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Link","useHistory","AppContext","fetchSearchIngredientMeal","fetchSearchLetterMeal","fetchSearchNameMeal","alert","CardMeals","search","radioType","meals","setMeals","categoryMeal","initialMeals","setRadioType","setSearch","history","filter","setFilter","fetchData","fetchApi","length","global","error","push","idMeal","handleFilter","meal","NUMBER","response","fetch","data","json","newData","slice","console","handleAllMeals","map","list","strCategory","index","strMealThumb","strTags","strMeal"],"sources":["/home/clecio/Trybe/Projetos/sd-029-b-project-recipes-app/src/components/CardMeals.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport AppContext from '../contexts/AppContext';\nimport { fetchSearchIngredientMeal, fetchSearchLetterMeal,\n  fetchSearchNameMeal } from '../services/fetchMeals';\n\nconst alert = 'Sorry, we haven\\'t found any recipes for these filters.';\n\nexport default function CardMeals() {\n  const { search, radioType, meals, setMeals, categoryMeal,\n    initialMeals, setRadioType, setSearch } = useContext(AppContext);\n  const history = useHistory();\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (radioType === 'ingredient') {\n          const fetchApi = await fetchSearchIngredientMeal(search);\n          setMeals(fetchApi);\n        } else if (radioType === 'name') {\n          const fetchApi = await fetchSearchNameMeal(search);\n          setMeals(fetchApi);\n        } else if (radioType === 'first-letter') {\n          if (search.length !== 1) {\n            global.alert('Your search must have only 1 (one) character');\n            setRadioType('');\n            setSearch('');\n            return;\n          }\n          const fetchApi = await fetchSearchLetterMeal(search);\n          setMeals(fetchApi);\n        }\n      } catch (error) {\n        global.alert(alert);\n      }\n    };\n\n    fetchData();\n\n    if (meals.length === 1) {\n      history.push(`/meals/${meals[0].idMeal}`);\n    }\n  }, [radioType, search, setMeals, history, meals]);\n\n  const handleFilter = async (meal) => {\n    if (filter === meal) {\n      setMeals(initialMeals);\n    } else {\n      try {\n        const NUMBER = 12;\n        const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${meal}`);\n        const data = await response.json();\n        const newData = data.meals;\n        setMeals(newData.slice(0, NUMBER));\n        setFilter(meal);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  const handleAllMeals = async () => {\n    setMeals(initialMeals);\n    setFilter([]);\n  };\n\n  return (\n    <div data-testid=\"meals-card\">\n      {\n        categoryMeal.map((list) => (\n          <button\n            onClick={ () => handleFilter(list.strCategory) }\n            data-testid={ `${list.strCategory}-category-filter` }\n            key={ list.strCategory }\n          >\n            { list.strCategory }\n          </button>\n        ))\n      }\n      <button\n        onClick={ handleAllMeals }\n        data-testid=\"All-category-filter\"\n        type=\"button\"\n      >\n        All\n      </button>\n      {\n        meals ? meals.map((meal, index) => (\n          <Link\n            to={ meals.length > 1 && `/meals/${meal.idMeal}` }\n            className=\"card-recipe\"\n            key={ meal.idMeal }\n            data-testid={ `${index}-recipe-card` }\n          >\n            <img\n              data-testid={ `${index}-card-img` }\n              src={ meal.strMealThumb }\n              alt={ meal.strTags }\n            />\n            <h3 data-testid={ `${index}-card-name` }>{ meal.strMeal }</h3>\n          </Link>\n        )) : null\n      }\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}