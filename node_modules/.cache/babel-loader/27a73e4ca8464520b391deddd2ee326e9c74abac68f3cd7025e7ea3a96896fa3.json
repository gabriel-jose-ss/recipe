{"ast":null,"code":"var _jsxFileName = \"/home/clecio/Trybe/Projetos/sd-029-b-project-recipes-app/src/components/RecipeInProgressMeal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport clipboardCopy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\nimport noFavoriteIcon from '../images/whiteHeartIcon.svg';\nimport favoriteIcon from '../images/blackHeartIcon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ingredients = [];\nexport default function RecipeInProgressMeal() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [meals, setMeals] = useState([]);\n  const [copied, setCopied] = useState(false);\n  const [favoriteRecipe, setFavoriteRecipe] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const api = await response.json();\n      const data = api.meals;\n      if (data) {\n        const NUMBER = 13;\n        for (let index = 1; index <= NUMBER; index += 1) {\n          const measure = data[0][`strMeasure${index}`];\n          const ingredient = data[0][`strIngredient${index}`];\n          ingredients.push(`${measure} ${ingredient}`);\n        }\n      }\n      setMeals(data);\n      setFavoriteRecipe({\n        id: data[0].idMeal,\n        type: 'Meal',\n        nationality: data[0].strArea,\n        category: data[0].strCategory || '',\n        alcoholicOrNot: data[0].strAlcoholic || '',\n        name: data[0].strMeal,\n        image: data[0].strMealThumb\n      });\n    };\n    fetchMeals();\n  }, [setMeals, favoriteRecipe, id]);\n  const handleShareClick = async () => {\n    const currentURL = window.location.href;\n    await clipboardCopy(currentURL);\n    setCopied(true);\n  };\n  const handleFavorite = _ref => {\n    let {\n      target\n    } = _ref;\n    setIsFavorite(!isFavorite);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"meal-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleShareClick,\n      type: \"button\",\n      \"data-testid\": \"share-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: shareIcon,\n        alt: \"Share Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFavorite,\n      type: \"button\",\n      \"data-testid\": \"favorite-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: isFavorite ? favoriteIcon : noFavoriteIcon,\n        alt: \"Favorite Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), copied && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Link copied!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 18\n    }, this), meals.map(meal => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        width: \"300px\",\n        \"data-testid\": \"recipe-photo\",\n        src: meal.strMealThumb,\n        alt: meal.strMeal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        \"data-testid\": \"recipe-title\",\n        children: meal.strMeal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        \"data-testid\": \"recipe-category\",\n        children: meal.strCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n        \"data-testid\": `${index}-ingredient-name-and-measure`,\n        htmlFor: `check${index}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"checkbox\",\n          id: `check${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }, this), ingredient]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"instructions\",\n        children: meal.strInstructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        \"data-testid\": \"video\",\n        title: meal.strMeal,\n        width: \"300\",\n        height: \"150\",\n        src: meal.strYoutube.replace('watch?v=', 'embed/')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, meal.idMeal, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeInProgressMeal, \"J9BFMkgVojY2G9AgXvJwjbUPhek=\", false, function () {\n  return [useParams];\n});\n_c = RecipeInProgressMeal;\nvar _c;\n$RefreshReg$(_c, \"RecipeInProgressMeal\");","map":{"version":3,"names":["React","useEffect","useState","useParams","clipboardCopy","shareIcon","noFavoriteIcon","favoriteIcon","ingredients","RecipeInProgressMeal","id","meals","setMeals","copied","setCopied","favoriteRecipe","setFavoriteRecipe","isFavorite","setIsFavorite","fetchMeals","response","fetch","api","json","data","NUMBER","index","measure","ingredient","push","idMeal","type","nationality","strArea","category","strCategory","alcoholicOrNot","strAlcoholic","name","strMeal","image","strMealThumb","handleShareClick","currentURL","window","location","href","handleFavorite","target","map","meal","strInstructions","strYoutube","replace"],"sources":["/home/clecio/Trybe/Projetos/sd-029-b-project-recipes-app/src/components/RecipeInProgressMeal.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport clipboardCopy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\nimport noFavoriteIcon from '../images/whiteHeartIcon.svg';\nimport favoriteIcon from '../images/blackHeartIcon.svg';\n\nconst ingredients = [];\n\nexport default function RecipeInProgressMeal() {\n  const { id } = useParams();\n  const [meals, setMeals] = useState([]);\n  const [copied, setCopied] = useState(false);\n  const [favoriteRecipe, setFavoriteRecipe] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const api = await response.json();\n      const data = api.meals;\n\n      if (data) {\n        const NUMBER = 13;\n        for (let index = 1; index <= NUMBER; index += 1) {\n          const measure = data[0][`strMeasure${index}`];\n          const ingredient = data[0][`strIngredient${index}`];\n          ingredients.push(\n            `${measure} ${ingredient}`,\n          );\n        }\n      }\n      setMeals(data);\n      setFavoriteRecipe({\n        id: data[0].idMeal,\n        type: 'Meal',\n        nationality: data[0].strArea,\n        category: data[0].strCategory || '',\n        alcoholicOrNot: data[0].strAlcoholic || '',\n        name: data[0].strMeal,\n        image: data[0].strMealThumb,\n      });\n    };\n    fetchMeals();\n  }, [setMeals, favoriteRecipe, id]);\n\n  const handleShareClick = async () => {\n    const currentURL = window.location.href;\n    await clipboardCopy(currentURL);\n    setCopied(true);\n  };\n\n  const handleFavorite = ({ target }) => {\n    setIsFavorite(!isFavorite);\n  };\n\n  return (\n    <div data-testid=\"meal-details\">\n      <button onClick={ handleShareClick } type=\"button\" data-testid=\"share-btn\">\n        <img src={ shareIcon } alt=\"Share Icon\" />\n      </button>\n      <button onClick={ handleFavorite } type=\"button\" data-testid=\"favorite-btn\">\n        <img src={ isFavorite ? favoriteIcon : noFavoriteIcon } alt=\"Favorite Icon\" />\n      </button>\n      {copied && <p>Link copied!</p>}\n      {\n        meals.map((meal) => (\n          <div key={ meal.idMeal }>\n            <img\n              width=\"300px\"\n              data-testid=\"recipe-photo\"\n              src={ meal.strMealThumb }\n              alt={ meal.strMeal }\n            />\n            <h3 data-testid=\"recipe-title\">{ meal.strMeal }</h3>\n            <h4 data-testid=\"recipe-category\">{ meal.strCategory }</h4>\n            <h5>Ingredients</h5>\n            {\n              ingredients.map((ingredient, index) => (\n                <label\n                  data-testid={ `${index}-ingredient-name-and-measure` }\n                  key={ index }\n                  htmlFor={ `check${index}` }\n                >\n                  <input type=\"checkbox\" name=\"checkbox\" id={ `check${index}` } />\n                  { ingredient }\n                </label>\n              ))\n            }\n            <p data-testid=\"instructions\">{ meal.strInstructions }</p>\n            <iframe\n              data-testid=\"video\"\n              title={ meal.strMeal }\n              width=\"300\"\n              height=\"150\"\n              src={ meal.strYoutube.replace('watch?v=', 'embed/') }\n            />\n          </div>\n        ))\n      }\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}