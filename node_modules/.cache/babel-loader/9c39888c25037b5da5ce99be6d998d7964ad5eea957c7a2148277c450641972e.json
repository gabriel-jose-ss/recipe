{"ast":null,"code":"var _jsxFileName = \"/home/clecio/Trybe/Projetos/sd-029-b-project-recipes-app/src/pages/RecipesDetailsDrink.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getYoutubeEmbedUrl from '../utils/getYoutubeEmbedUrl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecipesDetailsDrinkss() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [drinks, setDrinks] = useState([]);\n  useEffect(() => {\n    const fetchDrinks = async () => {\n      const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const api = await response.json();\n      const data = api.drinks;\n      setdrinkss(data);\n    };\n    fetchDrinks();\n  }, [setDrinks, id]);\n  const renderIngredients = () => {\n    const NUMBER = 13;\n    const ingredients = [];\n    for (let index = 1; index <= NUMBER; index += 1) {\n      if (drinks[0][`strIngredient${index}`]) {\n        ingredients.push(`${drinks[0][`strMeasure${index}`]} ${drinks[0][`strIngredient${index}`]}`);\n      }\n    }\n    return ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      \"data-testid\": `${index}-ingredient-name-and-measure`,\n      children: ingredient\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: drinks.map(drink => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": \"recipe-photo\",\n        src: drink.strDrinkThumb,\n        alt: drink.strDrink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        \"data-testid\": \"recipe-title\",\n        children: drink.strDrink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        \"data-testid\": \"recipe-category\",\n        children: drink.strCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: renderIngredients()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"instructions\",\n        children: drink.strInstructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        \"data-testid\": \"video\",\n        title: drink.strDrink,\n        width: \"560\",\n        height: \"315\",\n        src: getYoutubeEmbedUrl(drink.strYoutube)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, drink.idDrink, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipesDetailsDrinkss, \"ZysoR2sak8HsDONh/3Pjc3HiHMQ=\", false, function () {\n  return [useParams];\n});\n_c = RecipesDetailsDrinkss;\nvar _c;\n$RefreshReg$(_c, \"RecipesDetailsDrinkss\");","map":{"version":3,"names":["React","useEffect","useState","useParams","getYoutubeEmbedUrl","RecipesDetailsDrinkss","id","drinks","setDrinks","fetchDrinks","response","fetch","api","json","data","setdrinkss","renderIngredients","NUMBER","ingredients","index","push","map","ingredient","drink","strDrinkThumb","strDrink","strCategory","strInstructions","strYoutube","idDrink"],"sources":["/home/clecio/Trybe/Projetos/sd-029-b-project-recipes-app/src/pages/RecipesDetailsDrink.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getYoutubeEmbedUrl from '../utils/getYoutubeEmbedUrl';\n\nexport default function RecipesDetailsDrinkss() {\n  const { id } = useParams();\n  const [drinks, setDrinks] = useState([]);\n\n  useEffect(() => {\n    const fetchDrinks = async () => {\n      const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const api = await response.json();\n      const data = api.drinks;\n      setdrinkss(data);\n    };\n    fetchDrinks();\n  }, [setDrinks, id]);\n\n  const renderIngredients = () => {\n    const NUMBER = 13;\n    const ingredients = [];\n    for (let index = 1; index <= NUMBER; index += 1) {\n      if (drinks[0][`strIngredient${index}`]) {\n        ingredients.push(\n          `${drinks[0][`strMeasure${index}`]} ${drinks[0][`strIngredient${index}`]}`,\n        );\n      }\n    }\n    return ingredients.map((ingredient, index) => (\n      <li\n        data-testid={ `${index}-ingredient-name-and-measure` }\n        key={ index }\n      >\n        { ingredient }\n\n      </li>\n    ));\n  };\n\n  return (\n    <main>\n      {\n        drinks.map((drink) => (\n          <div key={ drink.idDrink }>\n            <img\n              data-testid=\"recipe-photo\"\n              src={ drink.strDrinkThumb }\n              alt={ drink.strDrink }\n            />\n            <h3 data-testid=\"recipe-title\">{ drink.strDrink }</h3>\n            <h4 data-testid=\"recipe-category\">{ drink.strCategory }</h4>\n            <h5>Ingredients</h5>\n            <ul>{ renderIngredients() }</ul>\n            <p data-testid=\"instructions\">{ drink.strInstructions }</p>\n            <iframe\n              data-testid=\"video\"\n              title={ drink.strDrink }\n              width=\"560\"\n              height=\"315\"\n              src={ getYoutubeEmbedUrl(drink.strYoutube) }\n            />\n          </div>\n        ))\n      }\n    </main>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,kBAAkB,MAAM,6BAA6B;AAAC;AAE7D,eAAe,SAASC,qBAAqB,GAAG;EAAA;EAC9C,MAAM;IAAEC;EAAG,CAAC,GAAGH,SAAS,EAAE;EAC1B,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMQ,WAAW,GAAG,YAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,4DAA2DL,EAAG,EAAC,CAAC;MAC9F,MAAMM,GAAG,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MACjC,MAAMC,IAAI,GAAGF,GAAG,CAACL,MAAM;MACvBQ,UAAU,CAACD,IAAI,CAAC;IAClB,CAAC;IACDL,WAAW,EAAE;EACf,CAAC,EAAE,CAACD,SAAS,EAAEF,EAAE,CAAC,CAAC;EAEnB,MAAMU,iBAAiB,GAAG,MAAM;IAC9B,MAAMC,MAAM,GAAG,EAAE;IACjB,MAAMC,WAAW,GAAG,EAAE;IACtB,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,IAAIF,MAAM,EAAEE,KAAK,IAAI,CAAC,EAAE;MAC/C,IAAIZ,MAAM,CAAC,CAAC,CAAC,CAAE,gBAAeY,KAAM,EAAC,CAAC,EAAE;QACtCD,WAAW,CAACE,IAAI,CACb,GAAEb,MAAM,CAAC,CAAC,CAAC,CAAE,aAAYY,KAAM,EAAC,CAAE,IAAGZ,MAAM,CAAC,CAAC,CAAC,CAAE,gBAAeY,KAAM,EAAC,CAAE,EAAC,CAC3E;MACH;IACF;IACA,OAAOD,WAAW,CAACG,GAAG,CAAC,CAACC,UAAU,EAAEH,KAAK,kBACvC;MACE,eAAe,GAAEA,KAAM,8BAA+B;MAAA,UAGpDG;IAAU,GAFNH,KAAK;MAAA;MAAA;MAAA;IAAA,QAKd,CAAC;EACJ,CAAC;EAED,oBACE;IAAA,UAEIZ,MAAM,CAACc,GAAG,CAAEE,KAAK,iBACf;MAAA,wBACE;QACE,eAAY,cAAc;QAC1B,GAAG,EAAGA,KAAK,CAACC,aAAe;QAC3B,GAAG,EAAGD,KAAK,CAACE;MAAU;QAAA;QAAA;QAAA;MAAA,QACtB,eACF;QAAI,eAAY,cAAc;QAAA,UAAGF,KAAK,CAACE;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAO,eACtD;QAAI,eAAY,iBAAiB;QAAA,UAAGF,KAAK,CAACG;MAAW;QAAA;QAAA;QAAA;MAAA,QAAO,eAC5D;QAAA,UAAI;MAAW;QAAA;QAAA;QAAA;MAAA,QAAK,eACpB;QAAA,UAAMV,iBAAiB;MAAE;QAAA;QAAA;QAAA;MAAA,QAAO,eAChC;QAAG,eAAY,cAAc;QAAA,UAAGO,KAAK,CAACI;MAAe;QAAA;QAAA;QAAA;MAAA,QAAM,eAC3D;QACE,eAAY,OAAO;QACnB,KAAK,EAAGJ,KAAK,CAACE,QAAU;QACxB,KAAK,EAAC,KAAK;QACX,MAAM,EAAC,KAAK;QACZ,GAAG,EAAGrB,kBAAkB,CAACmB,KAAK,CAACK,UAAU;MAAG;QAAA;QAAA;QAAA;MAAA,QAC5C;IAAA,GAjBOL,KAAK,CAACM,OAAO;MAAA;MAAA;MAAA;IAAA,QAmBzB;EAAC;IAAA;IAAA;IAAA;EAAA,QAEC;AAEX;AAAC,GA9DuBxB,qBAAqB;EAAA,QAC5BF,SAAS;AAAA;AAAA,KADFE,qBAAqB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}