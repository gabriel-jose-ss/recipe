{"ast":null,"code":"var _jsxFileName = \"/home/clecio/Trybe/Projetos/sd-029-b-project-recipes-app/src/contexts/AppProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport MyContext from './AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Provider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [search, setSearch] = useState('');\n  const [radioType, setRadioType] = useState('');\n  const [meals, setMeals] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [categoryMeal, setCategoryMeal] = useState([]);\n  const [categoryDrink, setCategoryDrink] = useState([]);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      try {\n        const NUMBER = 12;\n        const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n        const data = await response.json();\n        const newData = data.meals;\n        setMeals(newData.slice(0, NUMBER));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMeals();\n    const fetchCategoryMeal = async () => {\n      try {\n        const NUMBER = 5;\n        const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n        const data = await response.json();\n        const newData = data.meals;\n        setCategortMeal(newData.slice(0, NUMBER));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchCategoryMeal();\n    const fetchDrinks = async () => {\n      try {\n        const NUMBER = 12;\n        const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n        const data = await response.json();\n        const newData = data.drinks;\n        setDrinks(newData.slice(0, NUMBER));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchDrinks();\n  }, [setMeals, setDrinks]);\n  const value = useMemo(() => ({\n    meals,\n    setMeals,\n    drinks,\n    setDrinks,\n    search,\n    setSearch,\n    radioType,\n    setRadioType\n  }), [meals, setMeals, drinks, setDrinks, search, setSearch, radioType, setRadioType]);\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(Provider, \"si9MO3TgDz8fSaHh++z7BVVh6BY=\");\n_c = Provider;\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","PropTypes","MyContext","Provider","children","search","setSearch","radioType","setRadioType","meals","setMeals","drinks","setDrinks","categoryMeal","setCategoryMeal","categoryDrink","setCategoryDrink","fetchMeals","NUMBER","response","fetch","data","json","newData","slice","error","console","fetchCategoryMeal","setCategortMeal","fetchDrinks","value","propTypes","node","isRequired"],"sources":["/home/clecio/Trybe/Projetos/sd-029-b-project-recipes-app/src/contexts/AppProvider.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport MyContext from './AppContext';\n\nexport default function Provider({ children }) {\n  const [search, setSearch] = useState('');\n  const [radioType, setRadioType] = useState('');\n  const [meals, setMeals] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [categoryMeal, setCategoryMeal] = useState([]);\n  const [categoryDrink, setCategoryDrink] = useState([]);\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n      try {\n        const NUMBER = 12;\n        const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n        const data = await response.json();\n        const newData = data.meals;\n        setMeals(newData.slice(0, NUMBER));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMeals();\n\n    const fetchCategoryMeal = async () => {\n      try {\n        const NUMBER = 5;\n        const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n        const data = await response.json();\n        const newData = data.meals;\n        setCategortMeal(newData.slice(0, NUMBER));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchCategoryMeal();\n\n    const fetchDrinks = async () => {\n      try {\n        const NUMBER = 12;\n        const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n        const data = await response.json();\n        const newData = data.drinks;\n        setDrinks(newData.slice(0, NUMBER));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchDrinks();\n  }, [setMeals, setDrinks]);\n\n  const value = useMemo(() => ({\n    meals,\n    setMeals,\n    drinks,\n    setDrinks,\n    search,\n    setSearch,\n    radioType,\n    setRadioType,\n  }), [\n    meals,\n    setMeals,\n    drinks,\n    setDrinks,\n    search,\n    setSearch,\n    radioType,\n    setRadioType,\n  ]);\n\n  return (\n    <MyContext.Provider value={ value }>\n      { children }\n    </MyContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}