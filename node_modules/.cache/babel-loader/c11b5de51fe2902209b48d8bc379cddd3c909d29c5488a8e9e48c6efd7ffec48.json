{"ast":null,"code":"var _jsxFileName = \"/home/clecio/Trybe/Projetos/sd-029-b-project-recipes-app/src/pages/RecipesDetailsMeals.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getYoutubeEmbedUrl from '../utils/getYoutubeEmbedUrl';\nimport SlideDrinks from '../components/SlideDrinks';\n\n// const ingredients = [];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecipesDetailsMeals() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [meals, setMeals] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const api = await response.json();\n      const data = api.meals;\n      setMeals(data);\n    };\n    fetchMeals();\n    const NUMBER = 13;\n    for (let index = 1; index <= NUMBER; index += 1) {\n      setIngredients(`${meals[0][`strMeasure${index}`]} ${meals[0][`strIngredient${index}`]}`);\n    }\n  }, [setMeals, setIngredients, meals, id]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [meals.map(meal => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        width: \"300px\",\n        \"data-testid\": \"recipe-photo\",\n        src: meal.strMealThumb,\n        alt: meal.strMeal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        \"data-testid\": \"recipe-title\",\n        children: meal.strMeal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        \"data-testid\": \"recipe-category\",\n        children: meal.strCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          \"data-testid\": `${index}-ingredient-name-and-measure`,\n          children: ingredient\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"instructions\",\n        children: meal.strInstructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        \"data-testid\": \"video\",\n        title: meal.strMeal,\n        width: \"300\",\n        height: \"150\",\n        src: getYoutubeEmbedUrl(meal.strYoutube)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, meal.idMeal, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(SlideDrinks, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-start\",\n      type: \"button\",\n      \"data-testid\": \"start-recipe-btn\",\n      children: \"Start Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipesDetailsMeals, \"w96HTZgcpAUBNwrE62Nc6L2kRpU=\", false, function () {\n  return [useParams];\n});\n_c = RecipesDetailsMeals;\nvar _c;\n$RefreshReg$(_c, \"RecipesDetailsMeals\");","map":{"version":3,"names":["React","useEffect","useState","useParams","getYoutubeEmbedUrl","SlideDrinks","RecipesDetailsMeals","id","meals","setMeals","ingredients","setIngredients","fetchMeals","response","fetch","api","json","data","NUMBER","index","map","meal","strMealThumb","strMeal","strCategory","ingredient","strInstructions","strYoutube","idMeal"],"sources":["/home/clecio/Trybe/Projetos/sd-029-b-project-recipes-app/src/pages/RecipesDetailsMeals.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport getYoutubeEmbedUrl from '../utils/getYoutubeEmbedUrl';\nimport SlideDrinks from '../components/SlideDrinks';\n\n// const ingredients = [];\n\nexport default function RecipesDetailsMeals() {\n  const { id } = useParams();\n  const [meals, setMeals] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const api = await response.json();\n      const data = api.meals;\n      setMeals(data);\n    };\n    fetchMeals();\n\n    const NUMBER = 13;\n    for (let index = 1; index <= NUMBER; index += 1) {\n      setIngredients(\n        `${meals[0][`strMeasure${index}`]} ${meals[0][`strIngredient${index}`]}`,\n      );\n    }\n  }, [setMeals, setIngredients, meals, id]);\n\n  return (\n    <main>\n      {\n        meals.map((meal) => (\n          <div key={ meal.idMeal }>\n            <img\n              width=\"300px\"\n              data-testid=\"recipe-photo\"\n              src={ meal.strMealThumb }\n              alt={ meal.strMeal }\n            />\n            <h3 data-testid=\"recipe-title\">{ meal.strMeal }</h3>\n            <h4 data-testid=\"recipe-category\">{ meal.strCategory }</h4>\n            <h5>Ingredients</h5>\n            <ul>\n              {\n                ingredients.map((ingredient, index) => (\n                  <li\n                    data-testid={ `${index}-ingredient-name-and-measure` }\n                    key={ index }\n                  >\n                    { ingredient }\n\n                  </li>\n                ))\n              }\n\n            </ul>\n            <p data-testid=\"instructions\">{ meal.strInstructions }</p>\n            <iframe\n              data-testid=\"video\"\n              title={ meal.strMeal }\n              width=\"300\"\n              height=\"150\"\n              src={ getYoutubeEmbedUrl(meal.strYoutube) }\n            />\n          </div>\n        ))\n      }\n      <SlideDrinks />\n      <button\n        className=\"btn-start\"\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n      >\n        Start Recipe\n      </button>\n    </main>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}